name: build
on: [workflow_dispatch]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: oven-sh/setup-bun@v1
      - name: Cache node modules
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: linux-node_modules-${{ hashFiles('bun.lockb') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: bun i
      - name: Build
        run: bun run build -- linux-x64
      - name: Archive
        run: tar -czf linux-x64.tar.gz build
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-x64
          path: linux-x64.tar.gz
  build-win:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache node modules
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: win-node_modules-${{ hashFiles('bun.lockb') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm i
      - name: Build
        run: npm run build -- win-x64
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: win-x64
          path: build
  build-osx:
    strategy:
      matrix:
        target: [osx-x64, osx-arm64]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: oven-sh/setup-bun@v1
      - name: Cache node modules
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: osx-node_modules-${{ hashFiles('bun.lockb') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: bun i
      - name: Build
        run: bun run build -- ${{ matrix.target }}
      - name: Sign
        run: codesign --force --deep --sign - $(find build -name '*.app' | head -n 1)
      - name: Archive
        run: cd build && tar -czf ${{ matrix.target }}.tar.gz $(find . -name '*.app' | head -n 1)
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: build/${{ matrix.target }}.tar.gz
